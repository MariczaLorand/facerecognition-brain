{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","reportWebVitals.js","index.js"],"names":["FaceRecognition","imageUrl","box","className","id","alt","src","width","heigh","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","display","justifyContent","onClick","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","type","name","onChange","href","React","Component","Register","onNameChange","Logo","options","max","height","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","particlesOptions","particles","line_linked","shadow","enable","color","blur","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.4efa5a47.chunk.js","sourcesContent":["import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className='center ma'>\n      <div className='absolute mt2'>\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceRecognition;","import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n\tif(isSignedIn) {\n\t\treturn(\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n\t\t\t\t<p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n\t\t\t</nav>\t\t\t\n\t\t);\n\t} else {\n\t\treturn(\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign in</p>\n\t\t\t\t<p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Signin extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsignInEmail: '',\n\t\t\tsignInPassword: ''\n\t\t}\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({signInEmail: event.target.value})\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({signInPassword: event.target.value})\n\t}\n\n\tonSubmitSignIn = () => {\n\t\tfetch('https://secure-harbor-69642.herokuapp.com/signin', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.signInEmail,\n\t\t\t\tpassword: this.state.signInPassword\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(user => {\n\t\t\tif(user.id) {\n\t\t\t\tthis.props.loadUser(user);\n\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { onRouteChange } = this.props;\n\t\treturn(\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t  <div className=\"measure\">\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t\t        <input \n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t        \ttype=\"email\" \n\t\t\t\t        \tname=\"email-address\"  \n\t\t\t\t        \tid=\"email-address\"\n\t\t\t\t        \tonChange={this.onEmailChange}\n\t\t\t\t        />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t        <input \n\t\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t        \ttype=\"password\" \n\t\t\t\t        \tname=\"password\"  \n\t\t\t\t        \tid=\"password\"\n\t\t\t\t        \tonChange={this.onPasswordChange}\n\t\t\t\t        />\n\t\t\t\t      </div>\n\t\t\t\t    </fieldset>\n\t\t\t\t    <div className=\"\">\n\t\t\t\t      <input \n\t\t\t\t      \t// onClick={() => this.props.onRouteChange('home')} destructured\n\t\t\t\t      \tonClick={this.onSubmitSignIn}\n\t\t\t\t      \tclassName=\"br ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n\t\t\t\t      \ttype=\"submit\" \n\t\t\t\t      \tvalue=\"Sign in\"/>\n\t\t\t\t    </div>\n\t\t\t\t    <div className=\"lh-copy mt3\">\n\t\t\t\t      <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\n\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</main>\n\t\t\t</article>\t\n\t\t);\n\t}\n}\n\nexport default Signin;","import React from 'react';\n\nclass Register extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tname: ''\n\t\t}\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({email: event.target.value})\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({password: event.target.value})\n\t}\n\n\tonNameChange = (event) => {\n\t\tthis.setState({name: event.target.value})\n\t}\n\n\tonSubmitSignIn = () => {\n\t\tfetch('https://secure-harbor-69642.herokuapp.com/register', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.email,\n\t\t\t\tpassword: this.state.password,\n\t\t\t\tname: this.state.name\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(user => {\n\t\t\tif(user.id) {\n\t\t\t\tthis.props.loadUser(user)\n\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t  <div className=\"measure\">\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n\t\t\t\t        <input \n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t        \ttype=\"text\" \n\t\t\t\t        \tname=\"name\"  \n\t\t\t\t        \tid=\"name\"\n\t\t\t\t        \tonChange={this.onNameChange}\n\t\t\t\t        />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mt3\">\n\t\t                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t                <input\n\t\t\t                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n\t\t\t                type=\"email\"\n\t\t\t                name=\"email-address\"\n\t\t\t                id=\"email-address\"\n\t\t\t                onChange={this.onEmailChange}\n\t\t                />\n\t\t\t          </div>\n\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t        <input \n\t\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        type=\"password\" \n\t\t\t\t\t        name=\"password\"  \n\t\t\t\t\t        id=\"password\"\n\t\t\t\t\t        onChange={this.onPasswordChange}\n\t\t\t\t\t    />\n\t\t\t\t      </div>\n\t\t\t\t    </fieldset>\n\t\t\t\t    <div className=\"\">\n\t\t\t\t      <input \n\t\t\t\t      \tonClick={this.onSubmitSignIn}\n\t\t\t\t      \tclassName=\"br ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n\t\t\t\t      \ttype=\"submit\" \n\t\t\t\t      \tvalue=\"Register\"/>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</main>\n\t\t\t</article>\t\n\t\t);\n\t}\n}\n\nexport default Register;","export default __webpack_public_path__ + \"static/media/brain.ec96f013.png\";","import React from 'react';\nimport Tilt from 'react-tilt';\nimport brain from './brain.png';\nimport './Logo.css';\n \n\nconst Logo = () => {\n\treturn (\n\t\t<div className='ma4 mt0'>\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 200, width: 200 }} >\n\t\t\t <div className=\"Tilt-inner\"><img style={{paddingTop: '5px'}} src={brain} alt='logo'/></div>\n\t\t\t</Tilt>\n\t\t</div>\n\t);\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css'\n \n\nconst ImageLinkForm= ({ onInputChange, onButtonSubmit }) => {\n\treturn (\n\t\t<div>\n\t\t\t<p className='f3'>\n\t\t\t\t{'This Magic Brain will detect faces in your pictures. Give it a try.'}\n\t\t\t</p>\n\t\t\t<div className='center'>\n\t\t\t\t<div className='form center pa4 br3 shadow-5'>\n\t\t\t\t\t<input \n\t\t\t\t\t\tclassName='f4 pa2 w-70 center' \n\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\tonChange={onInputChange }/>\n\t\t\t\t\t<button \n\t\t\t\t\t\tclassName='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\n\t\t\t\t\t\tonClick={onButtonSubmit}\n\t\t\t\t\t>Detect</button>\n\t\t\t\t</div>\n\t\t\t</div> \n\t\t</div>\n\t);\n}\n\nexport default ImageLinkForm;","import React from 'react';\n \n\nconst Rank= ({ name, entries }) => {\n\treturn (\n\t\t<div>\t\n\t\t\t<div className='white f3'>\n\t\t\t\t{`${name}, your current entry count is: `}\n\t\t\t</div>\n\t\t\t<div className='white f1'>\n\t\t\t\t{entries}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n  \nexport default Rank;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\n//import Clarifai from 'clarifai'; //moved to backend becaus of api key protection\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\nimport Navigation from './components/Navigation/Navigation.js'\nimport Signin from './components/Signin/Signin.js'\nimport Register from './components/Register/Register.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js'\nimport Rank from './components/Rank/Rank.js'\nimport './App.css';\n\n\nconst particlesOptions = {\n\tparticles: {\n\t\tline_linked: {\n\t\t\tshadow: {\n\t\t\t\tenable: true,\n\t\t\t\tcolor: \"#3CA9D1\",\n\t\t\t\tblur: 5\n\t\t\t}\n\t\t}\n\t\t// Andrei's solution : \n\t\t// number: {\n\t\t// \tvalue: 30,\n\t\t// \tdensity: {\n\t\t// \t\tenable: true,\n\t\t// \t\tvalue_area: 800\n\t\t// \t}\n\t\t// }\n\t}\n}\n\nconst initialState = {\n\t  \t\tinput: '',\n\t  \t\timageUrl: '',\n\t  \t\tbox: {},\n\t  \t\troute: 'signin',\n\t  \t\tisSignedIn: false,\n\t  \t\tuser: {\n\t  \t\t\tid: '',\n\t            name: '',\n\t            email: '',\n\t            entries: 0,\n\t            joined: '' \n\t  \t\t}\n\t  \t}\n\nclass App extends Component {\n\t  constructor(){\n\t  \tsuper();\n\t  \tthis.state = initialState;\n\t  }\n\n\t  loadUser = (data) => {\n\t  \tthis.setState({user: {\n\t  \t\tid: data.id,\n            name: data.name,\n            email: data.email,\n            entries: data.entries,\n            joined: data.joined \n\t  \t}})\n\t  } \n\n\t calculateFaceLocation = (data) => {\n\t    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\t    const image = document.getElementById('inputimage');\n\t    const width = Number(image.width);\n\t    const height = Number(image.height);\n\t    return {\n\t      leftCol: clarifaiFace.left_col * width,\n\t      topRow: clarifaiFace.top_row * height,\n\t      rightCol: width - (clarifaiFace.right_col * width),\n\t      bottomRow: height - (clarifaiFace.bottom_row * height)\n\t    }\n\t }\n\n\t  displayFaceBox = (box) => {\n\t  \tthis.setState({box: box}); \n\t  }\n\n\t  onInputChange = (event) => {\n\t  \tthis.setState({input: event.target.value});\n\t  }\n\n\t  onButtonSubmit = () => {\n\t  \tthis.setState({imageUrl: this.state.input});\n\t  \t// app.models\n\t   //    .predict(\n\t   //      // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n\t   //      // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n\t   //      // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n\t   //      // If that isn't working, then that means you will have to wait until their servers are back up. Another solution\n\t   //      // is to use a different version of their model that works like: `c0c0ac362b03416da06ab3fa36fb58e3`\n\t   //      // so you would change from:\n\t   //      // .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n\t   //      // to:\n\t   //      // .predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\n\t   //      Clarifai.FACE_DETECT_MODEL,  \n\t   //      this.state.input)\n\t   \tfetch('https://secure-harbor-69642.herokuapp.com/imageurl', {\n\t\t        method: 'post',\n\t\t        headers: {'Content-Type': 'application/json'},\n\t\t        body: JSON.stringify({\n\t\t          input: this.state.input\n\t\t        }) //new lines\n\t    \t})\n\t        .then(response => response.json())\n\t      \t.then(response => {\n\t\t        if (response) {\n\t\t          fetch('https://secure-harbor-69642.herokuapp.com/image', {\n\t\t            method: 'put',\n\t\t            headers: {'Content-Type': 'application/json'},\n\t\t            body: JSON.stringify({\n\t\t              id: this.state.user.id\n\t\t            })\n\t\t          })\n\t\t            .then(response => response.json())\n\t\t            .then(count => {\n\t\t              this.setState(Object.assign(this.state.user, { entries: count}))\n\t\t            })\n\t\t            .catch(console.log);\n\t\t        }\n\t\t        this.displayFaceBox(this.calculateFaceLocation(response))\n\t      })\n\t      .catch(err => console.log(err));\n\t    }   \n\n\t  onRouteChange = (route) => {\n\t  \tif(route === 'signout') {\n\t  \t\tthis.setState(initialState)\n\t  \t} else if(route === 'home') {\n\t  \t\tthis.setState({isSignedIn: true})\n\t  \t}\n\t  \tthis.setState({route: route})\n\t  }\n\n\t  render() {\n\t  \t  const { isSignedIn, imageUrl, route, box } = this.state; //this.state.isSignedIn -> isSignedIn\n\t\t  return (\n\t\t    <div className=\"App\">\n\t\t      <Particles className='particles'\n\t\t                params={particlesOptions} />\n\t\t      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n\t\t      { route === 'home' \n\t\t\t      ? <div> \n\t\t\t\t      <Logo />\n\t\t\t\t      <Rank \n\t\t\t\t      \tname={this.state.user.name} \n\t\t\t\t      \tentries={this.state.user.entries} \n\t\t\t\t      />\n\t\t\t\t      <ImageLinkForm \n\t\t\t\t      \tonInputChange={this.onInputChange} \n\t\t\t\t      \tonButtonSubmit={this.onButtonSubmit} \n\t\t\t\t      />\n\t\t\t\t      <FaceRecognition \n\t\t\t\t      \tbox={box} \n\t\t\t\t      \timageUrl={imageUrl} \n\t\t\t\t       />\n\t\t\t\t    </div>  \n\t\t\t      : (\n\t\t\t\t      \troute === 'signin'\n\t\t\t\t      \t? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n\t\t\t\t      \t: <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n\t\t\t      \t)\n\t\t\t  }\n\t\t    </div>\n\t\t  );\n\t  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}